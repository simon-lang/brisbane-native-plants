{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useGlobalState","createGlobalState","showTable","searchTerm","Hero","setShowTable","className","onClick","document","getElementById","scrollIntoView","setTimeout","querySelector","select","href","SearchBar","setSearchTerm","id","type","name","placeholder","onChange","e","target","value","hidden","console","log","Card","props","item","commonName","description","attracts","index","style","height","src","process","alt","data","forEach","d","i","App","classNames","invisible","x","filter","JSON","stringify","toLowerCase","indexOf","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wRAYQA,EAAmBC,YAJN,CACnBC,WAAW,EACXC,WAAY,KAENH,eAMR,SAASI,IAAQ,IAAD,EACoBJ,EAAe,aADnC,mBACIK,GADJ,WASd,OACE,8BACE,sBAAMC,UAAU,GAAhB,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAIA,UAAU,+EAAd,UACE,sBAAMA,UAAU,GAAhB,4BACA,sBAAMA,UAAU,iBAAhB,2BACA,sBAAMA,UAAU,GAAhB,yBAEF,mBAAGA,UAAU,wFAAb,oZAQA,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,wBACEC,QAAS,kBA1BrBF,GAAa,GACbG,SAASC,eAAe,aAAaC,sBACrCC,YAAW,WACTH,SAASI,cAAc,oBAAoBC,WAC1C,KAuBSP,UAAU,sLAFZ,4BAOF,qBAAKA,UAAU,uBAAf,SACE,mBACEQ,KAAK,4HACLR,UAAU,0LAFZ,oCAcd,SAASS,IAAa,IAAD,EACOf,EAAe,cAAhCgB,EADU,oBAQnB,OACE,qBAAKV,UAAU,gBAAgBW,GAAG,YAAlC,SACE,gCACE,qBAAKX,UAAU,qCAAf,SACE,uBACEY,KAAK,OACLC,KAAK,SACLF,GAAG,SACHX,UAAU,yGACVc,YAAY,mBACZC,SAhBO,SAACC,GAChBN,EAAcM,EAAEC,OAAOC,YAkBnB,qBAAKC,QAAM,EAAX,SACE,kCACE,uBACEP,KAAK,WACLM,MAAM,6BACNH,SArBY,SAACC,GACvBI,QAAQC,IAAI,WAgBN,uCAcV,SAASC,EAAKC,GAAQ,IAAD,EAC8CA,EAAMC,KAA/DZ,EADW,EACXA,KAAMC,EADK,EACLA,KAAMY,EADD,EACCA,WAAYC,EADb,EACaA,YAAaC,EAD1B,EAC0BA,SAAUC,EADpC,EACoCA,MACvD,OACE,sBAAK5B,UAAU,sBAAf,UACE,qBAAKA,UAAU,oBAAoB6B,MAAO,CAAEC,OAAQ,SAApD,SACE,qBACEC,IAAKC,yCAA6CJ,EAAQ,OAC1DK,IAAKpB,MAGT,sBAAKb,UAAU,wBAAf,UACGyB,EADH,IACe,oBAAIzB,UAAU,SAAd,SAAwBa,IADvC,OAGA,qBAAKb,UAAU,UAAf,SAA0BY,IAC1B,qBAAKZ,UAAU,GAAf,SAAmB0B,IAXrB,YAYYC,EACV,qBAAKR,QAAM,EAAX,SACE,gCACE,mBAAGX,KAAM,8BAAgCK,EAAzC,kCA5GVqB,EAAKC,SAAQ,SAACC,EAAGC,GACfD,EAAER,MAAQS,KAkJGC,MAhCf,WAAgB,IAAD,EACO5C,EAAe,aAA5BE,EADM,sBAEQF,EAAe,cAA7BG,EAFM,oBAIb,OACE,sBAAKG,UAAU,2BAAf,UACE,cAACF,EAAD,IACA,qBACEE,UAAWuC,IAAW,CACpB,mBAAoB3C,EACpB,OAAQA,IAHZ,SAME,sBAAKI,UAAWuC,IAAW,CAAEC,WAAY5C,EAAW6C,GAAG,IAAvD,UACE,cAAChC,EAAD,IACA,qBAAKT,UAAU,uEAAf,SACGkC,EACEQ,QACC,SAACN,GAAD,OAC2D,IAAzDO,KAAKC,UAAUR,GAAGS,cAAcC,QAAQjD,MAE3CkD,KAAI,SAACX,GAAD,OACH,cAACd,EAAD,CAAME,KAAMY,GAAQA,EAAER,qBC3IvBoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzD,SAASC,eAAe,SAM1B6C,K","file":"static/js/main.b74bfc7f.chunk.js","sourcesContent":["// @format\n\nimport \"./App.css\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport data from \"./data.json\";\nimport { createGlobalState } from \"react-hooks-global-state\";\n\nconst initialState = {\n  showTable: false,\n  searchTerm: \"\",\n};\nconst { useGlobalState } = createGlobalState(initialState);\n\ndata.forEach((d, i) => {\n  d.index = i;\n});\n\nfunction Hero() {\n  const [showTable, setShowTable] = useGlobalState(\"showTable\");\n  const cta = () => {\n    setShowTable(true);\n    document.getElementById(\"SearchBar\").scrollIntoView();\n    setTimeout(() => {\n      document.querySelector(\"#SearchBar input\").select();\n    }, 10);\n  };\n  return (\n    <div>\n      <main className=\"\">\n        <div className=\"p-4\">\n          <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n            <span className=\"\">Brisbane free </span>\n            <span className=\"text-green-600\">native plants</span>\n            <span className=\"\"> program</span>\n          </h1>\n          <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:mx-auto md:mt-5 md:text-xl lg:mx-1\">\n            Brisbane City Council offers a variety of plants through the Free\n            Native Plants Program, suitable for all garden types and sizes.\n            Descriptions, growing conditions and fauna attracting information\n            will help you choose the plants most suitable for your garden. Every\n            plant adds to our city's urban forest, supports our unique wildlife\n            and makes Brisbane cleaner, greener and more sustainable.\n          </p>\n          <div className=\"mt-5 sm:mt-8 sm:flex\">\n            <div className=\"rounded-md shadow\">\n              <button\n                onClick={() => cta()}\n                className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-green-600 hover:bg-green-700 md:py-4 md:text-lg md:px-10\"\n              >\n                Find a plant\n              </button>\n            </div>\n            <div className=\"mt-3 sm:mt-0 sm:ml-3\">\n              <a\n                href=\"https://www.brisbane.qld.gov.au/clean-and-green/green-home-and-community/sustainable-gardening/free-native-plants-program\"\n                className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-green-700 bg-green-100 hover:bg-green-200 md:py-4 md:text-lg md:px-10\"\n              >\n                Learn More\n              </a>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nfunction SearchBar() {\n  const [, setSearchTerm] = useGlobalState(\"searchTerm\");\n  const onChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  const onChangeFilters = (e) => {\n    console.log(\"....\");\n  };\n  return (\n    <div className=\"SearchBar p-4\" id=\"SearchBar\">\n      <div>\n        <div className=\"mt-1 relative rounded-md shadow-sm\">\n          <input\n            type=\"text\"\n            name=\"search\"\n            id=\"search\"\n            className=\"text-2xl focus:ring-green-500 focus:border-green-500 block w-full pl-2 pr-2 border-gray-300 rounded-sm\"\n            placeholder=\"Search plants...\"\n            onChange={onChange}\n          />\n        </div>\n        <div hidden>\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"Tufting plants and grasses\"\n              onChange={onChangeFilters}\n            />\n            Tufting plants and grasses\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Card(props) {\n  const { type, name, commonName, description, attracts, index } = props.item;\n  return (\n    <div className=\"border p-4 bg-white\">\n      <div className=\"overflow-y-hidden\" style={{ height: \"16rem\" }}>\n        <img\n          src={process.env.PUBLIC_URL + \"/images/plants/\" + index + \".jpg\"}\n          alt={name}\n        />\n      </div>\n      <div className=\"text-xl font-semibold\">\n        {commonName}(<em className=\"italic\">{name}</em>)\n      </div>\n      <div className=\"text-lg\">{type}</div>\n      <div className=\"\">{description}</div>\n      Attracts {attracts}\n      <div hidden>\n        <small>\n          <a href={\"http://google.com/search?q=\" + name}>Google Search</a>\n        </small>\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  const [showTable] = useGlobalState(\"showTable\");\n  const [searchTerm] = useGlobalState(\"searchTerm\");\n\n  return (\n    <div className=\"mx-auto mt-10  max-w-7xl\">\n      <Hero></Hero>\n      <div\n        className={classNames({\n          \"overflow-hidden\": !showTable,\n          \"h-1\": !showTable,\n        })}\n      >\n        <div className={classNames({ invisible: !showTable, x: true })}>\n          <SearchBar></SearchBar>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 lg:grid-rows-3 gap-4 \">\n            {data\n              .filter(\n                (d) =>\n                  JSON.stringify(d).toLowerCase().indexOf(searchTerm) !== -1\n              )\n              .map((d) => (\n                <Card item={d} key={d.index}></Card>\n              ))}\n          </div>\n          {/* {selected && <Card item={selected}></Card>} */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}